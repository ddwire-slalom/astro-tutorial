---
import {getAllArticles, getAEMHeadless} from '../../utils/aemHeadless.js';

import GraphQLArticleLayout from '../../layouts/GraphQLArticleLayout.astro';

export async function getStaticPaths() {
  const aemHeadlessClient = getAEMHeadless();

  const blogEntries = await getAllArticles();
  return await Promise.all(blogEntries.data.articleList.items.map(async (entry) => {
    
    const slug = entry.slug;
    const queryResponse = await aemHeadlessClient.runPersistedQuery(`slalom-aem-commons/article-by-slug;slug=${slug}`);
    const blogEntry = queryResponse.data.articleList.items[0];
    return ({
      params: { slug: slug }, props: { entry:blogEntry },
    })
   }))
}

const { entry } = Astro.props;
//const { Content } = await entry.main.html.render();
---
<GraphQLArticleLayout frontmatter={entry}>
  
</GraphQLArticleLayout>